{% extends "base.twig" %}
{% block title %}Add Planet manually{% endblock %}
{% block head %}
    <style>
        .page-container {
            display: flex;
            flex-direction: row;
            justify-content: center;
        }

        .page-container form {
            margin-top: 1rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        label {
            display: inline-block;
            width: 100px;
        }
    </style>
{% endblock %}
{% block content %}
    <div class="page-container">
        <form>
            <div>
                <label for="system">Enter system name:</label>
                <input type="text" id="system" name="system" required />
            </div>
            <div>
                <label for="name">Enter planet name:</label>
                <input type="text" id="name" name="name" required />
            </div>
            <div>
                <label for="size">Enter planet size:</label>
                <input type="number" min="1" max="30" step="1" id="size" name="size" required />
            </div>
            <div>
                <label for="defaultTerrainType">Which terrain type to use as default?</label>
                <select id="defaultTerrainType" name="defaultTerrainType" required>
                    <option value="" selected>Loading...</option>
                </select>
            </div>
            <div>
                <button id="submit">Create planet</button>
            </div>
        </form>
    </div>

    <script type="application/javascript" defer>
        const terrainSelect = $('#defaultTerrainType');
        terrainSelect.select2();

        fetch('/api/definitions/terrain').then(async response => {
            const terrainDefinitions = await response.json();
            terrainDefinitions.sort((a, b) => a.name.localeCompare(b.name))

            for(const terrain of terrainDefinitions) {
                terrainSelect.append(new Option(terrain.name, terrain.uid, false, false));
            }

            terrainSelect.find('option[value=""]').attr('disabled', true).text('Select...');
            terrainSelect.select2()
        })

        $(document).on("select2:open", () => {
            document.querySelector(".select2-container--open .select2-search__field").focus()
        })

        const form = document.querySelector('form')
        form.addEventListener('submit', e => {
            e.preventDefault();
            const submitButton = document.querySelector('form button');
            submitButton.setAttribute('disabled', 'true');
            submitButton.innerText = 'Processing...'

            const formData = new FormData(form);
            const json = JSON.stringify(Object.fromEntries(formData));
            fetch(`/api/data/planets`, {method: 'POST', body: json, headers: {'Content-Type': 'application/json'}})
                .then(async response => {
                    const responseJson = await response.json();
                    console.log(responseJson);
                }
            )
        })
    </script>
{% endblock %}